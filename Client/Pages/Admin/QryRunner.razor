@page "/admin/qryrunner"
@using lcpCl = LCPCollection.Shared.Classes
@using System.Net.Http.Json
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient httpClient
@inject NavigationManager navManager

<PageTitle>LCPCollection - Admin - Query Runner</PageTitle>

<h1>Admin - Query Runner</h1>

<div class="container-fluid mt-3">
    <div class="row">
        <div class="col-12">
            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator/>

                <MudGrid>
                    <MudItem xs="12" sm="12" md="12" lg="12" xl="12" xxl="12">
                        <MudCard>
                            <MudCardContent>
                                <MudSelect T="string" @bind-Value="model.DBMode" Label="DB Mode" AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined">
                                    <MudSelectItem Value="@("SQLServer")" />
                                    <MudSelectItem Value="@("SQLite")" />
                                    <MudSelectItem Value="@("MySQL")" />
                                    <MudSelectItem Value="@("PostgreSQL")" />
                                </MudSelect>
                                <MudTextField @bind-Value="model.QryStr" T="string" Label="Query" HelperText="Write the query string here" Placeholder="select * from animes" For="@(() => model.QryStr)" />
                            </MudCardContent>
                            <MudCardActions Class="d-block text-center mt-3 mb-3">
                                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Secondary" Class="ml-auto" OnClick="DoClearData">Reset</MudButton>
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Send</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </EditForm>

            @if(!string.IsNullOrEmpty(DataX)) 
            {
                <div class="qryrunres mt-3" id="qryrunres">
                    <pre class="code">
                        @Newtonsoft.Json.JsonConvert.DeserializeObject(DataX)
                    </pre>
                </div>
            }
        </div>
    </div>
</div>

@code {
    lcpCl.QryRunner model { get; set; } = new lcpCl.QryRunner();
    string? DataX { get; set; } = "";
    bool success;

    private async Task OnValidSubmit(EditContext context)
    {
        success = true;

        if(success) {
            await DoSubData();
        }

        StateHasChanged();
    }

    private void DoClearData() {
        model.DBMode = "SQLServer";
        model.QryStr = "";
        DataX = "";
        StateHasChanged();
    }

    private async Task DoSubData()
    {
        var qryParams = $"?DBMode={model.DBMode}&QryStr={model.QryStr}";
        DataX = await httpClient.GetStringAsync($"https://localhost:5000/api/admin/qryrunner{qryParams}");
    }
}