@page "/games/delete/{id:int}"

@using LCPCollection.Shared.Classes
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json
@using lcpCl = LCPCollection.Shared.Classes
@inject ILogger<Games> _logger
@inject NavigationManager navMan
@inject HttpClient httpClient

<PageTitle>LCPCollection - Delete Games</PageTitle>

<h3><MudIcon Icon="@Icons.Material.Filled.Games" Color="Color.Inherit"></MudIcon> Delete Games</h3>

@if (cid != -1)
{
    @if (GamesXList != null)
    {
        <div class="form">
            <div class="form-group mt-3">
                <h3>Do you want to delete this game (id: @cid)?</h3>
                <MudTable Items="@GamesXList" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
                    <HeaderContent>
                        <MudTh>Id</MudTh>
                        <MudTh>Title</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Id">@context.Id</MudTd>
                        <MudTd DataLabel="Title">@context.Title</MudTd>
                    </RowTemplate>
                </MudTable>
            </div>

            <div class="form-group mt-3">
                <MudButton ButtonType="ButtonType.Button" Color="Color.Primary" Variant="Variant.Filled" Class="btnyes" OnClick="DeleteIt">Yes</MudButton>
                <MudButton ButtonType="ButtonType.Button" Color="Color.Secondary" Variant="Variant.Filled" Class="btnno" OnClick="Back">No</MudButton>
            </div>
        </div>
    }
    else
    {
        <div class="col-12 loadblk">
            <p>Loading...</p>
        </div>
    }
}
else
{
    <div class="col-12 warnblk">
        <MudCard>
            <MudCardContent>
                <div class="text-center mx-auto">
                    <i class="bi bi-exclamation-circle-fill warnico"></i>
                    <p class="warntxt">0 games has been found!</p>
                </div>
            </MudCardContent>
            <MudCardActions>
                <div class="text-center mx-auto">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/games" Class="text-center mx-auto">Back</MudButton>
                </div>
            </MudCardActions>
        </MudCard>
    </div>
}

@code {
    [Parameter] public int id { get; set; } = -1;
    public int cid { get; set; }
    private bool _loading = false;
    private IEnumerable<lcpCl.Games>? GamesXList = new List<lcpCl.Games>();
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        GamesXList = await httpClient.GetFromJsonAsync<List<lcpCl.Games>>($"games/{id}");
        cid = GamesXList!.Where(x => x.Id == id).Count() == 1 ? id : -1;

        hubConnection = new HubConnectionBuilder()
            .WithUrl(navMan.ToAbsoluteUri("/datasendhub"))
            .Build();

        await hubConnection.StartAsync();
    }

    Task SendMessage() => hubConnection!.SendAsync("SendMessage");

    public bool IsConnected => hubConnection!.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection!.DisposeAsync();
    }

    async Task DeleteIt()
    {
        try
        {
            if (cid != -1)
            {
                await httpClient.DeleteAsync($"games/{cid}");
                _logger.LogInformation("Deleted game successfully!");
            }
            else
            {
                _logger.LogInformation("Unable to delete game because it hasn't been found or does not exist!");
            }

            if (IsConnected) await SendMessage();
            navMan.NavigateTo("/games", false);
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, ex.Message);
        }
    }

    void Back()
    {
        navMan.NavigateTo(cid != -1 ? $"/games/{cid}" : "/games", false);
    }
}
