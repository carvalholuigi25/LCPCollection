@page "/users"
@page "/users/{id:int}"
@using System.Net.Http.Json
@using NJS = Newtonsoft.Json
@using System.Net.Http.Headers
@using lcpCl = LCPCollection.Shared.Classes
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient httpClient

<PageTitle>LCPCollection - Users</PageTitle>

<h1><MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Color="Color.Inherit"></MudIcon> Users</h1>

<div class="row mt-3">
    @if (UsersX!.Count() > 0)
    {
        @foreach (var item in UsersX!)
        {
            <MudCard Class="mcarditem mcardroundct">
                <div class="container d-flex flex-wrap mt-3 mb-3">
                    @if (id >= 1)
                    {
                        <div class="col-12 p-3 justify-content-center align-items-center text-center mx-auto">
                            <MudCardContent Class="p-0">
                                <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Color="Color.Inherit" Size="Size.Large" />
                                <MudText Class="mt-3">Id: @item.Id</MudText>
                                <MudText Class="mt-3">Username: @item.Username</MudText>
                                <MudText Class="mt-3">Role: @item.RoleName</MudText>
                                <MudText Class="mt-3">Date Account Created: @item.DateAccountCreated</MudText>
                            </MudCardContent>
                        </div>
                    }
                    else
                    {
                        <div class="col-12 col-md-6 col-lg-4 col-xl-4 col-xxl-4 p-3">
                            <MudCardContent Class="p-0 d-flex justify-content-center align-items-center text-center">
                                <MudNavLink Href=@($"/users/{item.Id}") Class="text-center">
                                    <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Class="text-center mx-auto d-block" Color="Color.Inherit" Size="Size.Large" />
                                    <MudText Class="mt-3 text-center">@item.Username</MudText>
                                </MudNavLink>
                            </MudCardContent>
                        </div>
                    }
                </div>
            </MudCard>
        }

        @if(id >= 1)
        {
            <div class="col-12 mx-auto text-center">
                <div class="d-block mt-3 mx-auto text-center">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/users">Back</MudButton>
                </div>
            </div>
        }
    } 
    else
    {
        <div class="col-12 warnblk">
            <MudCard>
                <MudCardContent>
                    <div class="text-center mx-auto">
                        <i class="bi bi-exclamation-circle-fill warnico"></i>
                        <p class="warntxt">0 users has been found!</p>
                    </div>
                </MudCardContent>
                <MudCardActions>
                    <div class="text-center mx-auto">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/" Class="text-center mx-auto">Back</MudButton>
                    </div>
                </MudCardActions>
            </MudCard>
        </div>
    }
</div>

@code {
    [Parameter] public int id { get; set; } = -1;
    public string cid { get; set; } = "";

    private IEnumerable<lcpCl.Users>? UsersX = new List<lcpCl.Users>();
    private lcpCl.Users? usersSessionInfo { get; set; } = new lcpCl.Users();

    protected override async Task OnInitializedAsync()
    {
        cid = id >= 1 ? $"{id}" : "";
        usersSessionInfo = await localStorage.GetItemAsync<lcpCl.Users>("loginInfo");
        httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", usersSessionInfo!.CurrentToken);
        UsersX = await httpClient.GetFromJsonAsync<List<lcpCl.Users>>($"users/{cid}");
        StateHasChanged();
    }
}